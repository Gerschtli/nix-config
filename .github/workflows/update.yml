name: Update inputs
on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 1

jobs:
  update:
    runs-on: ubuntu-latest

    outputs:
      branch: ${{ steps.branch.outputs.branch }}
      update_available: ${{ steps.changes.outputs.update_available }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install nix
        uses: cachix/install-nix-action@v31

      - name: Set branch name output
        id: branch
        run: echo "branch=ci/automatic-update-$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Create branch locally
        env:
          BRANCH_NAME: ${{ steps.branch.outputs.branch }}
        run: git switch -c "$BRANCH_NAME"

      - name: Setup git
        run: |
          git config --global user.email "tobias.happ@gmx.de"
          git config --global user.name "Tobias Happ"

      - name: Update inputs
        run: |
          nix \
            --option commit-lockfile-summary 'flake.inputs: automatic update' \
            flake update \
            --commit-lock-file

      - name: Check for changes
        id: changes
        run: |
          if git diff --exit-code origin/master...; then
            echo "update_available=false" >> $GITHUB_OUTPUT
          else
            echo "update_available=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.changes.outputs.update_available == 'true'
        env:
          BRANCH_NAME: ${{ steps.branch.outputs.branch }}
        run: git push --force origin "$BRANCH_NAME"

  build:
    uses: ./.github/workflows/ci.yml
    needs: update
    if: needs.update.outputs.update_available == 'true'
    with:
      branch: ${{ needs.update.outputs.branch }}
    secrets:
      CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  merge:
    runs-on: ubuntu-latest
    needs:
      - update
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Check if update branch is behind master
        env:
          BRANCH_NAME: ${{ needs.update.outputs.branch }}
        run: git diff "origin/$BRANCH_NAME...origin/master" --exit-code

      - name: Merge update into master
        env:
          BRANCH_NAME: ${{ needs.update.outputs.branch }}
        run: git merge "origin/$BRANCH_NAME"

      - name: Push master
        run: git push origin master

      - name: Delete update branch
        env:
          BRANCH_NAME: ${{ needs.update.outputs.branch }}
        run: git push --delete origin "$BRANCH_NAME"

  # needed for cachix agent deployments
  final-build:
    uses: ./.github/workflows/ci.yml
    needs: merge
    secrets:
      CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
      CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
